apply plugin: "com.github.ben-manes.versions"

buildscript {
    ext {
        kotlin_version = '1.3.30'
        okhttp_version = '3.12.1'

        slf4jVersion = '1.7.25'
        khex_version = '0.6'
        khash_version = '0.8'

        klaxon_version = '5.0.5'
        moshi_version = '1.8.0'
        jupiter_version = '5.4.0'
    }

    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.21.0'
    }
}

subprojects {
    repositories {
        jcenter()
        maven { url 'https://jitpack.io' }
        maven { url "https://kotlin.bintray.com/kotlinx" }
    }

    apply plugin: "kotlin"
    apply plugin: "jacoco"
    apply plugin: "maven"

    afterEvaluate { project ->

        dependencies {
            implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

            testImplementation 'org.assertj:assertj-core:3.11.1'
            testCompile "org.junit.jupiter:junit-jupiter-api:$jupiter_version"
            testCompile "org.junit.jupiter:junit-jupiter-params:$jupiter_version"
            testRuntime "org.junit.jupiter:junit-jupiter-engine:$jupiter_version"


            testImplementation "org.jetbrains.kotlin:kotlin-test"
            testImplementation "org.jetbrains.kotlin:kotlin-test-junit"
        }

        task sourcesJar(type: Jar, dependsOn: classes) {
            classifier = 'sources'
            from sourceSets.main.allSource
        }

        task javadocJar(type: Jar, dependsOn: javadoc) {
            classifier = 'javadoc'
            from javadoc.destinationDir
        }

        artifacts {
            archives sourcesJar
            archives javadocJar
        }
    }

    test {
        useJUnitPlatform()
        reports {
            html.enabled = true
        }
    }
}
